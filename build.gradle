/*
 Copyright (c) 2014,2015 Ahome' Innovation Technologies. All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
apply plugin: 'java'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(group: 'org.ajoberstar', name: 'grgit', version: '1.3.0')
    }
}

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens
import java.net.InetAddress
import org.ajoberstar.grgit.Grgit

sourceCompatibility = 1.7

version = '1.0.30-SNAPSHOT'

group = 'com.ahome-it'

task('deleteConfigs', type: Delete) {
    FileTree tree = fileTree (dir: 'build/resources/main');
    tree.each { File file ->
        delete(file)
    }
}

task('filterConfigs', dependsOn: deleteConfigs, type: Copy) {
    from sourceSets.main.allSource
    into 'build/resources/main'
    filter(FixCrLfFilter)
    filter(ReplaceTokens, tokens: getFilterTokens())
}

compileJava.dependsOn(clean)

jar.dependsOn(filterConfigs)

jar {
    manifest {
        attributes 'Implementation-Title': getProjectTitle(), 'Implementation-Version': getBuildModuleVersion()
    }
}

def getFilterTokens() {
    [GRADLE_BUILD_ARTIFACT_ID: getProjectArtifactID(), GRADLE_BUILD_PROJECT_TITLE: getProjectTitle(), GRADLE_BUILD_USER: getBuildUser(), GRADLE_BUILD_DATE: getBuildDate(), GRADLE_JAVA_VERSION: getJavaVersion(), GRADLE_GIT_COMMIT_HASH: getBuildGITCommitHash(), GRADLE_GIT_COMMIT_USER: getBuildGITCommitUser(), GRADLE_GIT_COMMIT_MESSAGE: getBuildGITCommitMessage(), GRADLE_BUILD_SERVER_HOST: getBuildServerHost(), GRADLE_BUILD_SERVER_BUILD: getBuildServerBuild(), GRADLE_BUILD_MODULE_VERSION: getBuildModuleVersion()]
}

def getProjectArtifactID() {
    'ahome-tooling-common'
}

def getProjectTitle() {
    'Ahome-Tooling-Common'
}

def getBuildModuleVersion() {
    version
}

def getBuildDate() {
    (new Date()).toString()
}

def getBuildServerHost() {
    try
    {
        InetAddress.getLocalHost().getHostName()
    }
    catch (Exception e)
    {
        "localhost"
    }
}

def getJavaVersion() {
    String java = System.getProperty('java.version')
    if (java)
    {
        return java
    }
    'unknown'
}

def getBuildUser() {
    String user = System.getProperty('user.name')
    if (user)
    {
        return user
    }
    'unknown'
}

def getBuildServerBuild() {
    String name = System.getProperty('BUILD_DISPLAY_NAME')
    if (name)
    {
        return name
    }
    'Command line ' + GradleVersion.current().toString()
}

def getBuildGITCommitHash() {
    'https://github.com/ahome-it/' + getProjectArtifactID() + '/commit/' + Grgit.open(project.file('.')).head().id
}

def getBuildGITCommitUser() {
    Grgit.open(project.file('.')).head().committer.email
}

def getBuildGITCommitMessage() {
    Grgit.open(project.file('.')).head().shortMessage
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            source java
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${sonatype_snapshotURL}") {
                authentication(userName: "${sonatype_user}", password: "${sonatype_password}")
            }
        }
    }
}
